name: 'Validate Module Configuration'
description: 'Validates module.json and extracts settings'

outputs:
  publish_release:
    description: 'Whether to publish release'
    value: ${{ steps.settings.outputs.publish_release }}
  changelog_enabled:
    description: 'Whether changelog is enabled'
    value: ${{ steps.settings.outputs.changelog_enabled }}
  create_github_release:
    description: 'Whether to create GitHub release'
    value: ${{ steps.settings.outputs.create_github_release }}
  php_version:
    description: 'PHP version to use'
    value: ${{ steps.check_php.outputs.php_version }}

runs:
  using: "composite"
  steps:
    # Validate minimum PBX version requirement
    - name: Validate PBX version
      shell: bash
      working-directory: ${{ github.workspace }}/module
      run: |
        MODULE_JSON="module.json"
        if [ ! -f "$MODULE_JSON" ]; then
          echo "Error: module.json not found in $(pwd)"
          ls -la
          exit 1
        fi

        MIN_PBX_VERSION=$(jq -r .min_pbx_version "$MODULE_JSON")
        if [ -z "$MIN_PBX_VERSION" ] || [ "$MIN_PBX_VERSION" = "null" ]; then
          echo "Error: min_pbx_version not specified in module.json"
          exit 1
        fi
        echo "Minimum PBX version requirement: $MIN_PBX_VERSION"

    # Check required metadata fields
    - name: Validate required fields
      shell: bash
      working-directory: ${{ github.workspace }}/module
      run: |
        MODULE_JSON="module.json"
        REQUIRED_FIELDS=("developer" "moduleUniqueID" "support_email")
        for field in "${REQUIRED_FIELDS[@]}"; do
          value=$(jq -r ".$field" "$MODULE_JSON")
          if [ -z "$value" ] || [ "$value" = "null" ]; then
            echo "Error: Required field '$field' is missing or empty in module.json"
            exit 1
          fi
        done

    # Determine PHP version from composer.json
    - name: Check PHP version
      id: check_php
      shell: bash
      working-directory: ${{ github.workspace }}/module
      run: |
        if [ -f "composer.json" ]; then
          PHP_REQ=$(jq -r '.require.php' composer.json)
          if [[ "$PHP_REQ" == *"8.3"* ]] || [[ "$PHP_REQ" == ">=8.3" ]]; then
            echo "php_version=8.3" >> $GITHUB_OUTPUT
          else
            echo "php_version=7.4" >> $GITHUB_OUTPUT
          fi
          echo "Using PHP version: $PHP_REQ"
        else
          echo "php_version=7.4" >> $GITHUB_OUTPUT
          echo "No composer.json found, defaulting to PHP 7.4"
        fi

    # Extract module settings from module.json
    - name: Read module settings
      id: settings
      shell: bash
      working-directory: ${{ github.workspace }}/module
      run: |
        echo "Reading module settings..."
        MODULE_JSON="module.json"
        
        echo "Current directory: $(pwd)"
        echo "Module.json contents:"
        cat "$MODULE_JSON"
        
        SETTINGS=$(jq -r '{
          publish_release: .release_settings.publish_release,
          changelog_enabled: .release_settings.changelog_enabled,
          create_github_release: .release_settings.create_github_release
        }' "$MODULE_JSON")
        
        echo "publish_release=$(echo $SETTINGS | jq -r .publish_release)" >> $GITHUB_OUTPUT
        echo "changelog_enabled=$(echo $SETTINGS | jq -r .changelog_enabled)" >> $GITHUB_OUTPUT
        echo "create_github_release=$(echo $SETTINGS | jq -r .create_github_release)" >> $GITHUB_OUTPUT
        
        echo "Module settings loaded:"
        echo "$SETTINGS"
